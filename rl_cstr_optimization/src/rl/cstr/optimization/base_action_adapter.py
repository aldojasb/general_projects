"""
Base action adapter interface for converting agent decisions to environment actions.

This module defines the interface for action mapping:
- convert_action(): Transform agent output to valid environment action
"""
from abc import ABC, abstractmethod
from typing import Any

class BaseActionAdapter(ABC):
    """
    Abstract base class for adapting actions from the agent to the format 
    expected by the environment.

    In many RL applications, the agent outputs a generic or abstract action 
    (e.g., a tensor or a normalized float), but the environment expects 
    specific formats (e.g., dictionaries with physical units, bounded values, 
    or categorical encodings). This adapter abstracts that translation.

    **Benefits:**
    - Enables easy integration across different environments without rewriting agent logic.
    - Facilitates enforcement of domain constraints such as clipping, scaling, 
      or reshaping.
    - Promotes testability and separation of concerns.

    **Example Use Case:**
    Suppose your agent outputs a 3-element list of floats between 0 and 1,
    but the environment expects a dictionary with flowrates in specific units:

        Agent output: [0.5, 0.8, 0.3]
        Environment expects: {
            "recycle_flow": 5.0,  # (0.5 * 10 L/h)
            "feed_flow": 24.0,    # (0.8 * 30 L/h)
            "shear": 3.0          # (0.3 * 10 Pa)
        }

    A custom implementation of this class would handle that conversion.
    """

    @abstractmethod
    def adapt(self, action: Any) -> Any:
        """
        Convert the action generated by the agent into the format required 
        by the environment.

        Args:
            action (Any): The raw action output by the agent. 
                          Can be a scalar, list, dict, tensor, etc.

        Returns:
            Any: A converted action matching the format and constraints 
                 of the target environment (e.g., type, shape, bounds).

        Raises:
            ValueError: If the input action is invalid or cannot be adapted.
        """
        pass